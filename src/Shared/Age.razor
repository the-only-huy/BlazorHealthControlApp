@inject IModel  Model

<div class="unit">
    <div class="label">Age (@Globals.MinAge - @Globals.MaxAge):</div>
    <div class="labelTarget">
        <input type="number"
               class="@InputClass"
               @bind-value="@AgeAmt"
               @bind-value:event="oninput" /> years
    </div>
</div>

@code {
   
    protected override void OnAfterRender(bool firstRender)
    {
        Model.Register(() =>
        {
            base.StateHasChanged();
        });
        base.OnAfterRender(firstRender);
    }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _age = Model.AgeYears;
    }

    bool ErrorState = false;

    string InputClass
    {
        get
        {
            return ErrorState ? "error" : string.Empty;
        }
    }

    int _age;

    int AgeAmt
    {
        get
        {
            return _age;
        }

        set
        {
            if (value != _age)
            {
                _age = value;
                if (value < Globals.MinAge || value > Globals.MaxAge)
                {
                    ErrorState = true;
                }
                else
                {
                    ErrorState = false;
                    Model.AgeYears = value;
                }
            }
        }
    }
}